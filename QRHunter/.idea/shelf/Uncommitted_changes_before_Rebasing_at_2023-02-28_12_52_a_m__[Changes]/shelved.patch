Index: app/src/test/java/com/example/qrhunter/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.qrhunter;\r\n\r\nimport org.junit.Test;\r\n\r\nimport static org.junit.Assert.*;\r\n\r\n/**\r\n * Example local unit test, which will execute on the development machine (host).\r\n *\r\n * @see <a href=\"http://d.android.com/tools/testing\">Testing documentation</a>\r\n */\r\npublic class ExampleUnitTest {\r\n    @Test\r\n    public void addition_isCorrect() {\r\n        assertEquals(4, 2 + 2);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/com/example/qrhunter/ExampleUnitTest.java b/app/src/test/java/com/example/qrhunter/ExampleUnitTest.java
--- a/app/src/test/java/com/example/qrhunter/ExampleUnitTest.java	
+++ b/app/src/test/java/com/example/qrhunter/ExampleUnitTest.java	
@@ -1,8 +1,10 @@
 package com.example.qrhunter;
 
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
-import static org.junit.Assert.*;
+import static org.junit.jupiter.api.Assertions.assertEquals;
+
+import com.example.qrhunter.data.repository.QRCodeRepository;
 
 /**
  * Example local unit test, which will execute on the development machine (host).
@@ -11,7 +13,29 @@
  */
 public class ExampleUnitTest {
     @Test
-    public void addition_isCorrect() {
-        assertEquals(4, 2 + 2);
+    public void calculatePoints_isCorrect() {
+        QRCodeRepository test = new QRCodeRepository();
+        assertEquals(11, test.calculatePoints('b', 1));
+        assertEquals(5, test.calculatePoints('5', 1));
+        assertEquals(81, test.calculatePoints('9', 2));
+        assertEquals(196, test.calculatePoints('e', 2));
+        assertEquals(1331, test.calculatePoints('b', 3));
+        assertEquals(3125, test.calculatePoints('5', 5));
+    }
+    @Test
+    public void hashQR_isCorrect() {
+        QRCodeRepository test = new QRCodeRepository();
+        // Hash given in example is wrong since echo call does not include -n to remove newline character
+        assertEquals("8227ad036b504e39fe29393ce170908be2b1ea636554488fa86de5d9d6cd2c32", test.hashQR("BFG5DGW54"));
+    }
+    @Test
+    public void calculateScore_isCorrect() {
+        QRCodeRepository test = new QRCodeRepository();
+        String qrCode = test.hashQR("BFG5DGW54");
+        // Repeats in hash are 22, 55, 44, 88 which is 2+5+4+8=19
+        assertEquals(19, test.calculateScore(qrCode));
+        // Repeats are ddd and ee which is 13^2+14=169+14=183
+        String qrCode1 = test.hashQR("BFG5DGW53");
+        assertEquals(183, test.calculateScore(qrCode1));
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/qrhunter/data/repository/QRCodeRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.qrhunter.data.repository;\r\n\r\npublic class QRCodeRepository extends DataRepository {\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/qrhunter/data/repository/QRCodeRepository.java b/app/src/main/java/com/example/qrhunter/data/repository/QRCodeRepository.java
--- a/app/src/main/java/com/example/qrhunter/data/repository/QRCodeRepository.java	
+++ b/app/src/main/java/com/example/qrhunter/data/repository/QRCodeRepository.java	
@@ -1,5 +1,47 @@
 package com.example.qrhunter.data.repository;
 
+import androidx.annotation.NonNull;
+
+import org.apache.commons.codec.digest.DigestUtils;
+
 public class QRCodeRepository extends DataRepository {
+    public String hashQR (String qrCode) {
+        return DigestUtils.sha256Hex(qrCode);
+    }
+    public double calculateScore(@NonNull String hash) {
+        double score = 0;
+        char[] array = hash.toCharArray();
+        for (int i = 0; i < array.length-1; i++) {
+            int value = 0;
+            if (array[i] == array [i+1] ) {
+                int j = i +1;
+                while (array[i] == array[j]) {
+                    value += 1;
+                    j += 1;
+                    if (j == array.length) {
+                        break;
+                    }
+                }
+            }
+            if (value > 0) {
+                score += calculatePoints(array[i], value);
+                i += value;
+            }
+        }
+        return score;
+    }
+
+    public double calculatePoints(Character key, Integer value) {
+        double points;
+        int ascii = (int) key;
+        if (ascii < 58) {
+            ascii -= 48;
+        }
+        else {
+            ascii -= 87;
+        }
+        points = Math.pow(ascii, value);
+        return points;
+    }
 
 }
Index: ../.idea/vcs.xml
===================================================================
diff --git a/../.idea/vcs.xml b/../.idea/vcs.xml
deleted file mode 100644
--- a/../.idea/vcs.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: ../.idea/QRHunter-App.iml
===================================================================
diff --git a/../.idea/QRHunter-App.iml b/../.idea/QRHunter-App.iml
deleted file mode 100644
--- a/../.idea/QRHunter-App.iml	
+++ /dev/null	
@@ -1,9 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: ../.idea/modules.xml
===================================================================
diff --git a/../.idea/modules.xml b/../.idea/modules.xml
deleted file mode 100644
--- a/../.idea/modules.xml	
+++ /dev/null	
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/QRHunter-App.iml" filepath="$PROJECT_DIR$/.idea/QRHunter-App.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: ../.idea/.gitignore
===================================================================
diff --git a/../.idea/.gitignore b/../.idea/.gitignore
deleted file mode 100644
--- a/../.idea/.gitignore	
+++ /dev/null	
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: local.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>## This file must *NOT* be checked into Version Control Systems,\r\n# as it contains information specific to your local configuration.\r\n#\r\n# Location of the SDK. This is only used by Gradle.\r\n# For customization when using a Version Control System, please read the\r\n# header note.\r\n#Fri Feb 24 00:18:25 MST 2023\r\nsdk.dir=D\\:\\\\Sdk\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/local.properties b/local.properties
--- a/local.properties	
+++ b/local.properties	
@@ -4,5 +4,5 @@
 # Location of the SDK. This is only used by Gradle.
 # For customization when using a Version Control System, please read the
 # header note.
-#Fri Feb 24 00:18:25 MST 2023
-sdk.dir=D\:\\Sdk
+#Mon Feb 27 20:41:16 MST 2023
+sdk.dir=C\:\\Users\\Van\\AppData\\Local\\Android\\Sdk
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n    id 'androidx.navigation.safeargs'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.qrhunter'\r\n    compileSdk 33\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.qrhunter\"\r\n        minSdk 24\r\n        targetSdk 33\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n    // zxing for QR code\r\n//    implementation 'com.google.zxing:core:3.4.1'\r\n    implementation 'com.github.yuriy-budiyev:code-scanner:2.3.2'\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.6.1'\r\n    implementation 'com.google.android.material:material:1.8.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'androidx.navigation:navigation-fragment:2.5.3'\r\n    implementation 'androidx.navigation:navigation-ui:2.5.3'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'\r\n\r\n    // Import navitaion components\r\n    implementation \"androidx.navigation:navigation-fragment:2.5.3\"\r\n    implementation \"androidx.navigation:navigation-ui:2.5.3\"\r\n\r\n    // Import the Firebase BoM\r\n    implementation platform('com.google.firebase:firebase-bom:31.2.2')\r\n\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n\r\n    // Add the dependency for the Firebase SDK for Google Analytics\r\n    implementation 'com.google.firebase:firebase-firestore'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	
+++ b/app/build.gradle	
@@ -31,6 +31,11 @@
     buildFeatures {
         viewBinding true
     }
+    testOptions {
+        unitTests.all {
+            useJUnitPlatform()
+        }
+    }
 }
 
 dependencies {
@@ -46,12 +51,13 @@
     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
     implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
     implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
-    testImplementation 'junit:junit:4.13.2'
+    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
+    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
     androidTestImplementation 'androidx.test.ext:junit:1.1.5'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
     implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
 
-    // Import navitaion components
+    // Import navigation components
     implementation "androidx.navigation:navigation-fragment:2.5.3"
     implementation "androidx.navigation:navigation-ui:2.5.3"
 
@@ -62,4 +68,8 @@
 
     // Add the dependency for the Firebase SDK for Google Analytics
     implementation 'com.google.firebase:firebase-firestore'
+
+    implementation 'commons-codec:commons-codec:1.13'
+
+
 }
\ No newline at end of file
